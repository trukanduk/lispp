#!/usr/bin/env python

from __future__ import print_function

import sys
import os
import os.path
import re

INCLUDE_ONCE = set()
INCLUDE_RE = re.compile(r'#include [<"](.+)[>"]')

def fuse_sources(dir, name):
    # print("// file {}".format(os.path.join(dir, name)))

    header_printed = False
    for line in open(os.path.join(dir, name)):
        if line.startswith("#pragma once"):
            continue

        m = INCLUDE_RE.match(line)
        if m:
            include_name = m.group(1)
            if include_name.startswith("lispp/"):
                include_name = include_name.split("/")[1]

            if os.path.exists(os.path.join("../include/lispp", include_name)):
                if include_name not in INCLUDE_ONCE:
                    INCLUDE_ONCE.add(include_name)
                    fuse_sources("../include/lispp", include_name)
                continue

        if not header_printed and line.strip() and line[0] != "#":
            print("// file {}".format(os.path.join(dir, name)))
            header_printed = True

        sys.stdout.write(line)
    print("// end file {}".format(os.path.join(dir, name)))
    print()

def fuse_dir(dir, ext=".cpp"):
    for fname in os.listdir(dir):
        if not fname.endswith(ext):
            print("Skip file {}".format(os.path.join(dir, fname)), file=sys.stderr)
            continue

        fuse_sources(dir, fname)

if __name__ == "__main__":
    fuse_dir("../src/core")
    fuse_dir("../build/stdlib") # NOTE: generated by cmake!
    fuse_dir("../src/repl")
